{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AhhhA\\\\OneDrive\\\\Desktop\\\\PortfolioPieces\\\\2023\\\\ai-joke\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Comment } from \"react-loader-spinner\";\nimport BadWordsFilter from \"bad-words\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filter = require(\"bad-words\");\nfunction App() {\n  _s();\n  let [joke, setJoke] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: require(\"./images/background.png\"),\n      alt: \"\",\n      id: \"bg-top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: require(\"./images/background.png\"),\n      alt: \"\",\n      id: \"bg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row t1 d-flex flex-column p-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10 offset-1 text-center d-flex justify-content-center align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"display-4 m-0 \",\n            id: \"welcome\",\n            children: \"Welcome to AI Jokes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require(\"./images/logo.png\"),\n            id: \"logo\",\n            className: \"mx-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10 mt-4 offset-1 d-flex d-flex justify-content-center align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"d-inline m-0\",\n            children: \"Tell me a joke about...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"mx-1\",\n            id: \"subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: purifyResponse,\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n//Pressing enter also submits the form\n_s(App, \"ABYbgsUcJhlDVMLWj5OVlMKQNWw=\");\n_c = App;\ndocument.onkeydown = function (event) {\n  if (event.key == \"Enter\") {\n    purifyResponse();\n  }\n};\n\n/*The function below makes sure the user input is respectful and is not just an empty string.\nThe user input is first checked for content, then it goes through TWO profanity filters.\n If it passes all the tests, it gets passed to the handleResponse function which is responsible for the axios request. */\n\nfunction purifyResponse() {\n  let userinput = document.getElementById(\"subject\").value.trim();\n  const filter = new Filter();\n  //Make sure not an empty string\n  if (userinput === \"\" || userinput == \" \") {\n    alert(\"Please type a joke subject before submitting\");\n    //Profanity filter #1: we are using the bad words npm package: https://www.npmjs.com/package/bad-words */\n  } else if (filter.isProfane(userinput)) {\n    alert(\"Please be respectful to the AI.\");\n  } else {\n    //Profanity filter #2: The bad words npm package doesn't cover everything, so I made a big regular expression.\n    var re = /((fuck*)|(shit*)|(bitch*)|(porn*)|(assh*)|(ballsack*)|(whore*)|(hentai*)|(cunt*))/;\n    //teehee lol ^ https://www.youtube.com/watch?v=25f2IgIrkD4\n    let profanityFilter2 = re.test(userinput);\n    if (profanityFilter2 === true) {\n      alert(\"Please be respectful to the AI.\");\n    } else {\n      //Yay, it passed! Send to handleSubmit() function\n      handleSubmit(userinput);\n    }\n  }\n  //Makes a call to SheCodes AI API using axios\n  function handleSubmit(userinput) {\n    let apiKey = \"f7o330d7cc44511d503ab6b4tdbb899b\";\n    let prompt = `Tell me a joke about ${userinput}`;\n    let context = \"PLease only tell the joke, nothing more.\";\n    let apiURL = `https://api.shecodes.io/ai/v1/generate?prompt=${prompt}&context=${context}&key=${apiKey}`;\n    //axios.get(apiURL).then(handleResponse);\n  }\n\n  //handles the response by displaying it on the screen using a cool typewriter animation\n  function handleResponse(response) {\n    setJoke(response.data.answer);\n  }\n  if (joke) {\n    alert(response.data.answer);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Comment, {\n      visible: true,\n      height: \"80\",\n      width: \"80\",\n      ariaLabel: \"comment-loading\",\n      wrapperStyle: {},\n      wrapperClass: \"comment-wrapper\",\n      color: \"#fff\",\n      backgroundColor: \"#F4442E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Comment","BadWordsFilter","axios","jsxDEV","_jsxDEV","Filter","require","App","_s","joke","setJoke","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","onClick","purifyResponse","_c","document","onkeydown","event","key","userinput","getElementById","value","trim","filter","alert","isProfane","re","profanityFilter2","test","handleSubmit","apiKey","prompt","context","apiURL","handleResponse","response","data","answer","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","color","backgroundColor","$RefreshReg$"],"sources":["C:/Users/AhhhA/OneDrive/Desktop/PortfolioPieces/2023/ai-joke/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Comment } from \"react-loader-spinner\";\nimport BadWordsFilter from \"bad-words\";\nimport axios from \"axios\";\nconst Filter = require(\"bad-words\");\n\nfunction App() {\n  let [joke, setJoke] = useState(null);\n  return (\n    <div className=\"App\">\n      <div id=\"background\"></div>\n      <img src={require(\"./images/background.png\")} alt=\"\" id=\"bg-top\" />\n      <img src={require(\"./images/background.png\")} alt=\"\" id=\"bg\" />\n      <div className=\"container\">\n        <div className=\"row t1 d-flex flex-column p-5\">\n          <div className=\"col-10 offset-1 text-center d-flex justify-content-center align-items-center\">\n            <h1 className=\"display-4 m-0 \" id=\"welcome\">\n              Welcome to AI Jokes\n            </h1>\n            <img\n              src={require(\"./images/logo.png\")}\n              id=\"logo\"\n              className=\"mx-4\"\n            />\n          </div>\n          <div className=\"col-10 mt-4 offset-1 d-flex d-flex justify-content-center align-items-center\">\n            <p className=\"d-inline m-0\">Tell me a joke about...</p>\n            <input type=\"text\" className=\"mx-1\" id=\"subject\"></input>\n            <button onClick={purifyResponse}>Generate</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n//Pressing enter also submits the form\ndocument.onkeydown = function (event) {\n  if (event.key == \"Enter\") {\n    purifyResponse();\n  }\n};\n\n/*The function below makes sure the user input is respectful and is not just an empty string.\nThe user input is first checked for content, then it goes through TWO profanity filters.\n If it passes all the tests, it gets passed to the handleResponse function which is responsible for the axios request. */\n\nfunction purifyResponse() {\n  let userinput = document.getElementById(\"subject\").value.trim();\n  const filter = new Filter();\n  //Make sure not an empty string\n  if (userinput === \"\" || userinput == \" \") {\n    alert(\"Please type a joke subject before submitting\");\n    //Profanity filter #1: we are using the bad words npm package: https://www.npmjs.com/package/bad-words */\n  } else if (filter.isProfane(userinput)) {\n    alert(\"Please be respectful to the AI.\");\n  } else {\n    //Profanity filter #2: The bad words npm package doesn't cover everything, so I made a big regular expression.\n    var re =\n      /((fuck*)|(shit*)|(bitch*)|(porn*)|(assh*)|(ballsack*)|(whore*)|(hentai*)|(cunt*))/;\n    //teehee lol ^ https://www.youtube.com/watch?v=25f2IgIrkD4\n    let profanityFilter2 = re.test(userinput);\n    if (profanityFilter2 === true) {\n      alert(\"Please be respectful to the AI.\");\n    } else {\n      //Yay, it passed! Send to handleSubmit() function\n      handleSubmit(userinput);\n    }\n  }\n  //Makes a call to SheCodes AI API using axios\n  function handleSubmit(userinput) {\n    let apiKey = \"f7o330d7cc44511d503ab6b4tdbb899b\";\n    let prompt = `Tell me a joke about ${userinput}`;\n    let context = \"PLease only tell the joke, nothing more.\";\n\n    let apiURL = `https://api.shecodes.io/ai/v1/generate?prompt=${prompt}&context=${context}&key=${apiKey}`;\n    //axios.get(apiURL).then(handleResponse);\n  }\n\n  //handles the response by displaying it on the screen using a cool typewriter animation\n  function handleResponse(response) {\n    setJoke(response.data.answer);\n  }\n\n  if (joke) {\n    alert(response.data.answer);\n  } else {\n    return (\n      <Comment\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"comment-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"comment-wrapper\"\n        color=\"#fff\"\n        backgroundColor=\"#F4442E\"\n      />\n    );\n  }\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}